name: CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  pre_commit:
    name: üíç pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: hashicorp/setup-terraform@v2
      - name: Install binaries
        run: |
          mkdir -p .binaries && cd .binaries
          curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          chmod +x terraform-docs
          mv terraform-docs /usr/local/bin/terraform-docs
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          # Install tfsec
          curl -sSLo ./tfsec_1.28.0_linux_amd64.tar.gz https://github.com/aquasecurity/tfsec/releases/download/v1.28.0/tfsec_1.28.0_linux_amd64.tar.gz
          mv tfsec_1.28.0_linux_amd64.tar.gz tfsec.tar.gz
          tar -xzf tfsec.tar.gz
          chmod +x tfsec
          mv tfsec /usr/local/bin/tfsec
          cd ..
      - name: Run
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install pre-commit checkov
          pre-commit install
          pre-commit run --all-files --show-diff-on-failure

  verify_module:
    name: Verify module
    needs: [pre_commit]
    strategy:
      matrix:
        terraform: [1.1.9]
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@v3
      - run: terraform init -get -backend=false -input=false
      - run: terraform fmt -recursive -check=true -write=false

  verify_examples:
    name: Verify examples
    needs: [pre_commit]
    strategy:
      fail-fast: false
      matrix:
        terraform: [1.0.11, latest]
        example:
          [
            "runner-default",
            "runner-docker",
            "runner-multi-region",
            "runner-pre-registered",
            "runner-public",
            "runner-certificates",
          ]
    defaults:
      run:
        working-directory: examples/${{ matrix.example }}
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform }}
    steps:
      - uses: actions/checkout@v3
      - run: terraform init -get -backend=false -input=false
      - if: contains(matrix.terraform, '1.0.')
        run: terraform fmt -recursive -check=true -write=false
      - run: terraform validate

  docs:
    # update docs after merge back to develop
    if: github.event_name != 'pull_request' && contains('refs/heads/develop', github.ref)
    name: Auto update terraform docs
    needs: [verify_module, verify_examples]
    runs-on: ubuntu-latest

    steps:
    - name: CHeckout branch
      uses: actions/checkout@v3

    - name: Generate TF docs
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        find-dir: .
        git-commit-message: "docs: auto update terraform docs"
        git-push: true

  tfsec:
    name: tfsec PR commenter
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ github.token }}

  release:
    if: github.event_name != 'pull_request' && contains('refs/heads/main', github.ref)
    name: Release
    needs: [verify_module, verify_examples]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Get installation token
        uses: npalm/action-app-token@v1.0.0
        id: app-token
        with:
          appId: ${{ secrets.APP_ID }}
          appPrivateKeyBase64: ${{ secrets.APP_PRIVATE_KEY_BASE64 }}
          appInstallationType: repo
          appInstallationValue: ${{ github.repository }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          cp .release/* .
          yarn
          yarn release --repositoryUrl https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
